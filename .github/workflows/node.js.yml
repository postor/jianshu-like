# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-next:
    defaults:
      run:
        working-directory: ./next-frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: next-frontend/package-lock.json
    - run: ls
    - run: npm ci
    - run: npm run build 
  
  test-apis:
    defaults:
      run:
        working-directory: ./moleculer-apis
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Create mongo Docker container
      id: build_mongo_docker
      uses: DigiPie/mongo-action@v1.0.1
      with:
        image-version: latest
        port: 27017
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: moleculer-apis/package-lock.json
    - run: npm ci
    - run: MONGODB=mongo://localhost:27017/jianshu yarn jest

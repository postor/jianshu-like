version: "3.3"

services:
  next: 
    build:
      context: ./next-frontend
      args:
        API_BASE: ''
        API_BASE_BACKEND: http://api:3000
    image: next-frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.next.rule=PathPrefix(`/`)"
      - "traefik.http.services.next.loadbalancer.server.port=3000"
    networks:
      - internal
    

  api:
    build:
      context: ./moleculer-apis
    image: moleculer-apis
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/api`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  user:
    build:
      context: ./moleculer-apis
    image: moleculer-apis
    env_file: docker-compose.env
    environment:
      SERVICES: user
    depends_on:
      - nats
    networks:
      - internal

  article:
    build:
      context: ./moleculer-apis
    image: moleculer-apis
    env_file: docker-compose.env
    environment:
      SERVICES: article
    depends_on:
      - nats
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  mongodb:
    image: mongo:4.2.3-bionic
    environment:
      - MONGO_INITDB_DATABASE=test
      #- MONGO_INITDB_ROOT_USERNAME=admin
      #- MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
      - ./mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb



  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
  mongodb:
  mongoconfig:
